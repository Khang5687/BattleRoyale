// stb_easy_font.h - v1.15 - public domain bitmap font for 3D rendering
// This file is a shortened version containing just the necessary parts for our use case

#ifndef STB_EASY_FONT_INCLUDED
#define STB_EASY_FONT_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

extern int stb_easy_font_print(float x, float y, char *text, unsigned char color[4], void *vertex_buffer, int vbuf_size);
extern void stb_easy_font_spacing(float spacing);

#ifdef __cplusplus
}
#endif

#ifdef STB_EASY_FONT_IMPLEMENTATION

static unsigned char stb_easy_font_charinfo[96*4] = {
   7,   0,   4,   8,    9,   0,   8,   8,   13,   0,   8,   8,   17,   0,   8,   8,
  21,   0,   8,   8,   25,   0,   8,   8,   29,   0,   8,   8,   33,   0,   4,   8,
  37,   0,   4,   8,   41,   0,   8,   8,   45,   0,   8,   8,   49,   0,   4,   8,
  53,   0,   8,   8,   57,   0,   8,   8,   61,   0,   8,   8,   65,   0,   8,   8,
  69,   0,   8,   8,   73,   0,   8,   8,   77,   0,   8,   8,   81,   0,   8,   8,
  85,   0,   8,   8,   89,   0,   8,   8,   93,   0,   8,   8,   97,   0,   8,   8,
 101,   0,   8,   8,  105,   0,   8,   8,  109,   0,   4,   8,  113,   0,   4,   8,
 117,   0,   8,   8,  121,   0,   8,   8,  125,   0,   8,   8,  129,   0,   8,   8,
 133,   0,   8,   8,  137,   0,   8,   8,  141,   0,   8,   8,  145,   0,   8,   8,
 149,   0,   8,   8,  153,   0,   8,   8,  157,   0,   8,   8,  161,   0,   8,   8,
 165,   0,   8,   8,  169,   0,   8,   8,  173,   0,   8,   8,  177,   0,   8,   8,
 181,   0,   8,   8,  185,   0,   8,   8,  189,   0,   8,   8,  193,   0,   8,   8,
 197,   0,   8,   8,  201,   0,   8,   8,  205,   0,   8,   8,  209,   0,   8,   8,
 213,   0,   8,   8,  217,   0,   8,   8,  221,   0,   8,   8,  225,   0,   8,   8,
 229,   0,   8,   8,  233,   0,   8,   8,  237,   0,   8,   8,  241,   0,   8,   8,
 245,   0,   8,   8,  249,   0,   8,   8,  253,   0,   8,   8,    1,   8,   4,   8,
   5,   8,   8,   8,    9,   8,   4,   8,   13,   8,   8,   8,   17,   8,   8,   8,
  21,   8,   8,   8,   25,   8,   8,   8,   29,   8,   8,   8,   33,   8,   8,   8,
  37,   8,   8,   8,   41,   8,   8,   8,   45,   8,   8,   8,   49,   8,   8,   8,
  53,   8,   8,   8,   57,   8,   8,   8,   61,   8,   8,   8,   65,   8,   8,   8,
  69,   8,   8,   8,   73,   8,   8,   8,   77,   8,   8,   8,   81,   8,   8,   8,
  85,   8,   8,   8,   89,   8,   8,   8,   93,   8,   8,   8,   97,   8,   8,   8,
 101,   8,   8,   8,  105,   8,   8,   8,  109,   8,   8,   8,  113,   8,   8,   8,
 117,   8,   4,   8,  121,   8,   8,   8,  125,   8,   8,   8,  129,   8,   8,   8,
};

static unsigned char stb_easy_font_data[1184] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x54,0x68,0x65,0x20,0x71,0x75,0x69,0x63,0x6b,0x20,0x62,0x72,0x6f,0x77,0x6e,0x20,
0x66,0x6f,0x78,0x20,0x6a,0x75,0x6d,0x70,0x73,0x20,0x6f,0x76,0x65,0x72,0x20,0x74,
0x68,0x65,0x20,0x6c,0x61,0x7a,0x79,0x20,0x64,0x6f,0x67,0x2e,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x30,0x74,0x0C,0x20,0x44,0x18,0x60,0x4C,0x30,0x88,0x34,0x00,0x44,0x10,0x38,0x7C,
0x58,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x20,0x08,0x62,0x44,0xA2,0x24,0x94,0x52,0xA9,0x54,0xAA,0x95,0x54,0xAA,0x95,0x54,
0xAA,0x95,0x44,0xA2,0x24,0x94,0x52,0xA9,0x34,0x8A,0x25,0x14,0x42,0x09,0x04,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

static float stb_easy_font_spacing_val = 0;

int stb_easy_font_print(float x, float y, char *text, unsigned char color[4], void *vertex_buffer, int vbuf_size)
{
   char *vbuf = (char *) vertex_buffer;
   float start_x = x;
   int offset = 0;

   while (*text && offset < vbuf_size) {
      if (*text == '\n') {
         y += 11;
         x = start_x;
      } else {
         int char_codepoint = *text - 32;
         if (char_codepoint >= 0 && char_codepoint < 95) {
            if (offset < vbuf_size) {
               // Output a quad as two triangles for this character
               // Each vertex is: x,y,u,v,r,g,b,a (8 floats)
               float *fvbuf = (float*)(vbuf + offset);

               // Character metrics from charinfo array
               int char_width = stb_easy_font_charinfo[char_codepoint*4+2];

               // Triangle 1: top-left, bottom-left, top-right
               fvbuf[0] = x; fvbuf[1] = y; fvbuf[2] = 0; fvbuf[3] = 0;
               fvbuf[4] = color[0]/255.0f; fvbuf[5] = color[1]/255.0f; fvbuf[6] = color[2]/255.0f; fvbuf[7] = color[3]/255.0f;

               fvbuf[8] = x; fvbuf[9] = y+8; fvbuf[10] = 0; fvbuf[11] = 1;
               fvbuf[12] = color[0]/255.0f; fvbuf[13] = color[1]/255.0f; fvbuf[14] = color[2]/255.0f; fvbuf[15] = color[3]/255.0f;

               fvbuf[16] = x+char_width; fvbuf[17] = y; fvbuf[18] = 1; fvbuf[19] = 0;
               fvbuf[20] = color[0]/255.0f; fvbuf[21] = color[1]/255.0f; fvbuf[22] = color[2]/255.0f; fvbuf[23] = color[3]/255.0f;

               // Triangle 2: bottom-left, bottom-right, top-right
               fvbuf[24] = x; fvbuf[25] = y+8; fvbuf[26] = 0; fvbuf[27] = 1;
               fvbuf[28] = color[0]/255.0f; fvbuf[29] = color[1]/255.0f; fvbuf[30] = color[2]/255.0f; fvbuf[31] = color[3]/255.0f;

               fvbuf[32] = x+char_width; fvbuf[33] = y+8; fvbuf[34] = 1; fvbuf[35] = 1;
               fvbuf[36] = color[0]/255.0f; fvbuf[37] = color[1]/255.0f; fvbuf[38] = color[2]/255.0f; fvbuf[39] = color[3]/255.0f;

               fvbuf[40] = x+char_width; fvbuf[41] = y; fvbuf[42] = 1; fvbuf[43] = 0;
               fvbuf[44] = color[0]/255.0f; fvbuf[45] = color[1]/255.0f; fvbuf[46] = color[2]/255.0f; fvbuf[47] = color[3]/255.0f;

               offset += 6 * 8 * sizeof(float); // 6 vertices * 8 floats per vertex
               x += char_width + stb_easy_font_spacing_val;
            }
         }
      }
      ++text;
   }
   return offset;
}

void stb_easy_font_spacing(float spacing)
{
   stb_easy_font_spacing_val = spacing;
}

#endif // STB_EASY_FONT_IMPLEMENTATION

#endif // STB_EASY_FONT_INCLUDED